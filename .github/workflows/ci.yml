name: ci pipelines

on:
  pull_request:
    branches:
      - dev
  push:
    branches: [ dev ]

permissions: write-all

jobs:
  all:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:6.2
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Run tests with H2 DB
        env:
          spring_profiles_active: test
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          S3_PUBLIC: ${{ secrets.S3_PUBLIC }}
          S3_SECRET: ${{ secrets.S3_SECRET }}
          S3_REGION: ${{ secrets.S3_REGION }}
          SLACKBOT_TOKEN: ${{ secrets.SLACKBOT_TOKEN }}
          LOGSTASH_HOST: ${{ secrets.LOGSTASH_HOST }}
          LOGSTASH_PORT: ${{ secrets.LOGSTASH_PORT }}
        run: ./gradlew test -Dspring.profiles.active=test

  post-process:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Register test results as comments in PR
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'

      - name: If the test fails, register a Check comment in the failed code line
        uses: mikepenz/action-junit-report@v3
        if: failure()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}